const assert = require('assert')
const Firefox = require('selenium-webdriver/firefox');
const options = new Firefox.Options();
const { When, Then, Given, setDefaultTimeout } = require('@cucumber/cucumber')
const { openWebsite, hasElement } = require('./util/util.js');
const { login } = require('./util/login.js');
require('dotenv').config()


// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')

let driver
let vars = {}
setDefaultTimeout(60 * 1000);

When('open the website',async function() {
  // driver = await new Builder().forBrowser('firefox').setFirefoxOptions(options.addArguments('--headless')).build()
  driver = await new Builder().forBrowser('firefox').build()
  
  console.log(process.env.WEBSITE);
  await openWebsite(driver, process.env.WEBSITE)
});

Then('I should find the landing page',async function () {
  await driver.sleep(10000)
  assert(await hasElement(driver, By.name('username')))
  await driver.quit()
});

Given('I logged in as admin',async function () {
  //driver = await new Builder().forBrowser('firefox').setFirefoxOptions(options.addArguments('--headless')).build()
  driver = await new Builder().forBrowser('firefox').build()
  
  await login(
    driver, 
    process.env.WEBSITE, 
    "pocuser1.qbistro@demo.com", 
    "Password@12345", 
    ".mt-4")  
});

Then('I should see dashboard',async function () {
  await driver.sleep(10000)
  let elements = await driver.findElements(By.css(".rounded-2xl > .text-sm"))
  //assert (elements.length > 0, "The length of the elements should be larger than 0")
  assert (elements.length)
  await driver.quit()
});
